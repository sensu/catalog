---
api_version: catalog/v1
type: Integration
metadata:
  namespace: dns
  name: dns-monitoring
spec:
  class: supported
  provider: monitoring
  display_name: DNS Monitoring
  short_description: Monitor DNS service availability
  supported_platforms:
    - linux
  tags:
    - dns
  contributors:
    - "@sensu"
    - "@c-kruse"
  prompts:
    - type: section
      title: DNS Query Configuration
    - type: markdown
      body: |
        Provide these configuration parameters for the DNS query:

        * Domain name
        * Record type
        * Record class
        * Name servers
        * DNS server port
    - type: question
      name: domain
      required: true
      input:
        default: sensu.io
        type: string
        title: Domain name
        description: >-
          Domain name to query
    - type: question
      name: record_type
      required: true
      input:
        default: A
        type: string
        title: Record type
        description: >-
          Record type to query (default is `A`)
    - type: question
      name: record_class
      required: true
      input:
        default: IN
        type: string
        title: Record class
        description: >-
          Record class to query (default is `IN`)
    - type: question
      name: servers
      required: true
      input:
        default: 1.1.1.1
        type: string
        title: Name servers
        description: >-
          Comma-delimited list of name servers to query
    - type: question
      name: port
      required: true
      input:
        default: 53
        type: integer
        title: DNS server port
        description: >-
          DNS server port to query (default is `53`)
    - type: section
      title: Event statuses
    - type: markdown
      body: |
        Configure statuses for the events generated when DNS records cannot be resolved or when DNSSEC is not configured.

        0 = OK, 1 = WARNING, 2 = CRITICAL
    - type: question
      name: record_not_resolved_exit_code
      required: true
      input:
        type: integer
        title: DNS record not resolved
        description: >-
          Select the event status to use when the DNS record cannot be resolved
        enum:
          - 0
          - 1
          - 2
        default: 2
    - type: question
      name: dnssec_not_configured_exit_code
      required: true
      input:
        type: integer
        title: DNSSEC not configured
        description: >-
          Select the event status to use when the name server indicates that DNSSEC is not configured
        enum:
          - 0
          - 1
          - 2
        default: 1
    - type: section
      title: Sensu Subscriptions
    - type: markdown
      body: |
        Specify the subscriptions for Sensu agents that should execute the `{DOMAIN_NAME}-{RECORD_TYPE}-dns-monitoring` check
    - type: question
      name: subscriptions
      input:
        type: array
        items:
          type: string
          title: Subscriptions
          ref: core/v2/entity/subscriptions
        default:
          - dns
    - type: section
      title: Pipeline Configuration
    - type: markdown
      body: |
        Name the [pipelines] you want to use to process DNS Monitoring integration data.

        [pipelines]: https://docs.sensu.io/sensu-go/latest/observability-pipeline/observe-process/pipelines/
    - type: question
      name: alert_pipeline
      required: false
      input:
        type: string
        title: Alert pipeline name
        description: >-
          Which pipeline do you want to use for alerts due to failures this integration detects?
        ref: core/v2/pipeline/metadata/name
        refFilter: .labels.provider == "alerts"
    - type: question
      name: incident_pipeline
      required: false
      input:
        type: string
        title: Incident pipeline name
        description: >-
          Which pipeline do you want to use to process incidents due to failures this integration detects?
        ref: core/v2/pipeline/metadata/name
        refFilter: .labels.provider == "incidents"
    - type: question
      name: metrics_pipeline
      required: false
      input:
        type: string
        title: Metrics pipeline name
        description: >-
          Which pipeline do you want to use to process the metrics this integration collects?
        ref: core/v2/pipeline/metadata/name
        refFilter: .labels.provider == "metrics"
  resource_patches:
    - resource:
        api_version: core/v2
        type: CheckConfig
        name: dns-monitoring
      patches:
        - path: /metadata/name
          op: replace
          value: "[[domain]]-[[record_type]]-dns-monitoring"
        - path: /spec/proxy_entity_name
          op: replace
          value: domain
        - path: /spec/subscriptions
          op: replace
          value: subscriptions
        - path: /spec/env_vars/-
          op: add
          value: "DNS_CHECK_SERVERS=[[servers]]"
        - path: /spec/env_vars/-
          op: add
          value: "DNS_CHECK_PORT=[[port]]"
        - path: /spec/env_vars/-
          op: add
          value: "DNS_CHECK_DOMAIN=[[domain]]"
        - path: /spec/env_vars/-
          op: add
          value: "DNS_CHECK_RECORD_CLASS=[[record_class]]"
        - path: /spec/env_vars/-
          op: add
          value: "DNS_CHECK_RECORD_TYPE=[[record_type]]"
        - path: /spec/pipelines/-
          op: add
          value:
            api_version: core/v2
            type: Pipeline
            name: "[[alert_pipeline]]"
        - path: /spec/pipelines/-
          op: add
          value:
            api_version: core/v2
            type: Pipeline
            name: "[[incident_pipeline]]"
        - path: /spec/pipelines/-
          op: add
          value:
            api_version: core/v2
            type: Pipeline
            name: "[[metrics_pipeline]]"
        - path: /spec/output_metric_thresholds/0/thresholds/0/status
          op: replace
          value: record_not_resolved_exit_code
        - path: /spec/output_metric_thresholds/1/thresholds/0/status
          op: replace
          value: dnssec_not_configured_exit_code
  post_install:
    - type: section
      title: Success
    - type: markdown
      body: |
        You enabled the DNS Monitoring integration for [[domain]] port [[port]], record type [[record_type]], and record class [[record_class]].

        The `[[domain]]-[[record_type]]-dns-monitoring` check will run for all Sensu agents with these subscriptions: [[subscriptions]].